name: Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (例如 0.1.1)'
        required: false

jobs:
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve version
        id: version
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            raw="${GITHUB_REF##*/}"
            version="${raw#v}"
          elif [[ -n "${{ github.event.inputs.version }}" ]]; then
            version="${{ github.event.inputs.version }}"
          else
            version=$(node -p "require('./package.json').version")
          fi
          if [[ -z "$version" ]]; then
            echo "failed to determine version" >&2
            exit 1
          fi
          echo "value=$version" >> "$GITHUB_OUTPUT"
          echo "tag=v$version" >> "$GITHUB_OUTPUT"

  build:
    name: Build ${{ matrix.name }}
    needs: prepare
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macOS
            runner: macos-latest
            artifact: macos
          - name: Windows
            runner: windows-latest
            artifact: windows
          - name: Linux
            runner: ubuntu-latest
            artifact: linux
    env:
      VERSION: ${{ needs.prepare.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libudev-dev

      - name: Install dependencies
        run: bun install

      - name: Download models
        run: bun run download-models

      - name: Verify models
        run: bun run check-models

      - name: Build Tauri bundle
        run: bun run tauri build

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: miaoyu-${{ matrix.artifact }}
          path: src-tauri/target/release/bundle

  release:
    name: Publish Release
    needs: [prepare, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download bundles
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare.outputs.tag }}
          name: ${{ needs.prepare.outputs.tag }}
          generate_release_notes: true
          files: dist/**/*
